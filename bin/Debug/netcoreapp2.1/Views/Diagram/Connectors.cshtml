@using Syncfusion.JavaScript;
@using Syncfusion.JavaScript.DataVisualization.DiagramEnums;
@section SampleHeading{ <span class="sampleName">Diagram / Default Functionalities</span>}
@section MetaTags{
    <meta name="description" content="This sample demonstrates the connector’s bridging and editing behavior and also how to customize the connector appearance in ASP.NET MVC diagram.">
}
@section ControlsSection{
    <ej-diagram id="diagram" width="700px" height="560px" enable-context-menu="false">
        <e-snap-settings snap-constraints="None">
        </e-snap-settings>
        <e-page-settings scroll-limit="@ScrollLimit.Diagram"></e-page-settings>
        <e-nodes>
            <e-flow-shape name="node1" width="90" height="40" offset-X="80" offset-Y="90" shape="Terminator">
                <e-labels>
                    <e-diagram-label text="Start"></e-diagram-label>
                </e-labels>
            </e-flow-shape>
            <e-flow-shape name="node2" width="130" height="100" offset-X="260" offset-Y="90" shape="Decision">
                <e-labels>
                    <e-diagram-label text="Already installed the software?"></e-diagram-label>
                </e-labels>
            </e-flow-shape>
            <e-flow-shape name="node3" width="100" height="50" offset-X="440" offset-Y="90" shape="Process">
                <e-labels>
                    <e-diagram-label text="Show license agreement"></e-diagram-label>
                </e-labels>
            </e-flow-shape>
            <e-flow-shape name="node4" width="110" height="90" offset-X="610" offset-Y="90" shape="Decision">
                <e-labels>
                    <e-diagram-label text="Agreed?"></e-diagram-label>
                </e-labels>
            </e-flow-shape>
            <e-flow-shape name="node5" width="130" height="100" offset-X="260" offset-Y="240" shape="Decision">
                <e-labels>
                    <e-diagram-label text="Override existing version?">
                        <e-margin left="10" right="10" top="2" bottom="2"></e-margin>
                    </e-diagram-label>
                </e-labels>
            </e-flow-shape>
            <e-flow-shape name="node6" width="90" height="50" offset-X="610" offset-Y="240" shape="Process">
                <e-labels>
                    <e-diagram-label text="Select destination folder"></e-diagram-label>
                </e-labels>
            </e-flow-shape>
            <e-flow-shape name="node7" width="110" height="90" offset-X="610" offset-Y="410" shape="Decision">
                <e-labels>
                    <e-diagram-label text="Enough disk space?"></e-diagram-label>
                </e-labels>
            </e-flow-shape>
            <e-flow-shape name="node8" width="90" height="50" offset-X="440" offset-Y="410" shape="Process">
                <e-labels>
                    <e-diagram-label text="Free Space"></e-diagram-label>
                </e-labels>
            </e-flow-shape>
            <e-flow-shape name="node9" width="90" height="50" offset-X="260" offset-Y="410" shape="Process">
                <e-labels>
                    <e-diagram-label text="Copy files"></e-diagram-label>
                </e-labels>
                <e-ports>
                    <e-port name="in" shape="Circle">
                        <e-offset x="0.4f" y="0.01f"></e-offset>
                    </e-port>
                    <e-port name="inn" shape="Circle">
                        <e-offset x="0.6f" y="0.01f"></e-offset>
                    </e-port>
                </e-ports>
            </e-flow-shape>
            <e-flow-shape name="node10" width="90" height="40" offset-X="80" offset-Y="410" shape="Terminator">
                <e-labels>
                    <e-diagram-label text="End"></e-diagram-label>
                </e-labels>
            </e-flow-shape>
        </e-nodes>
        <e-connectors>
            <e-connector name="connector1" source-node="node1" target-node="node2">
            </e-connector>
            <e-connector name="connector2" source-node="node2" target-node="node3">
                <e-labels>
                    <e-diagram-label text="No" fill-color="white"></e-diagram-label>
                </e-labels>
            </e-connector>
            <e-connector name="connector3" source-node="node3" target-node="node4">
            </e-connector>
            <e-connector name="connector4" source-node="node4" target-node="node10">
                <e-labels>
                    <e-diagram-label text="No" fill-color="white">
                        <e-offset x="0.44f" y="0.27f"></e-offset>
                    </e-diagram-label>
                </e-labels>
                <e-segments>
                    <e-segment type="Orthogonal" length="30" direction="right"></e-segment>
                    <e-segment type="Orthogonal" length="80" direction="bottom"></e-segment>
                    <e-segment type="Orthogonal" length="620" direction="left"></e-segment>
                    <e-segment type="Orthogonal" length="220" direction="bottom"></e-segment>
                </e-segments>
            </e-connector>
            <e-connector name="connector5" source-node="node2" target-node="node5">
                <e-labels>
                    <e-diagram-label text="Yes" fill-color="white">
                        <e-offset x="0.2f" y="0.2f"></e-offset>
                    </e-diagram-label>
                </e-labels>
            </e-connector>
            <e-connector name="connector6" source-node="node4" target-node="node6">
                <e-labels>
                    <e-diagram-label text="Yes" fill-color="white">
                        <e-offset x="0.4f" y="0.2f"></e-offset>
                    </e-diagram-label>
                </e-labels>
            </e-connector>
            <e-connector name="connector7" source-node="node6" target-node="node7">
            </e-connector>
            <e-connector name="connector8" source-node="node7" target-node="node8">
                <e-labels>
                    <e-diagram-label text="No" fill-color="white"></e-diagram-label>
                </e-labels>
            </e-connector>
            <e-connector name="connector9" source-node="node8" target-node="node9">
            </e-connector>
            <e-connector name="connector10" source-node="node9" target-node="node10">
            </e-connector>
            <e-connector name="connector11" source-node="node5" target-node="node9" target-port="in">
                <e-labels>
                    <e-diagram-label text="Yes" fill-color="white">
                        <e-offset x="0.01f" y="0.38f"></e-offset>
                    </e-diagram-label>
                </e-labels>
                <e-segments>
                    <e-segment type="Orthogonal" length="20" direction="left"></e-segment>
                    <e-segment type="Orthogonal" length="72" direction="bottom"></e-segment>
                    <e-segment type="Orthogonal" length="20" direction="right"></e-segment>
                </e-segments>
            </e-connector>
            <e-connector name="connector12" source-node="node7" target-node="node9" target-port="inn">
                <e-labels>
                    <e-diagram-label text="Yes" fill-color="white">
                        <e-offset x="0.22f" y="0.01f"></e-offset>
                    </e-diagram-label>
                </e-labels>
                <e-segments>
                    <e-segment type="Orthogonal" length="20" direction="right"></e-segment>
                    <e-segment type="Orthogonal" length="97" direction="top"></e-segment>
                    <e-segment type="Orthogonal" length="416" direction="left"></e-segment>
                </e-segments>
            </e-connector>
        </e-connectors>
        <e-default-settings>
            <e-node border-color="#000000" fill-color="#6bbd45" constraints="Default &~ NodeConstraints.Drag">
                <e-labels>
                    <e-diagram-label font-color="white">
                        <e-margin left="20" right="20" top="2" bottom="2"></e-margin>
                    </e-diagram-label>
                </e-labels>
            </e-node>
            <e-connector corner-radius="10" line-width="2" line-color="black" constraints="Default | ConnectorConstraints.Bridging">
                <e-segments><e-segment type="Orthogonal"></e-segment></e-segments>
            </e-connector>
        </e-default-settings>
    </ej-diagram>
}

@section PropertiesSection{
    <div id="sampleProperties">
        <div class="prop-grid">
            <div class="row">
                <div class="col-md-6 aligntop">
                    <b>Connectors</b>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3 aligntop" style="margin-right: -10px;">
                    Segment
                </div>
                <div class="col-md-3">
                    <input type="text" id="segment" />
                    <div id="segmentlistDiv">
                        <ul>
                            <li value="orthogonal">Orthogonal</li>
                            <li value="straight">Straight</li>
                            <li value="bezier">Bezier</li>
                        </ul>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 aligntop" style="margin-right: -10px;">
                    Corner Radius
                </div>
                <div class="col-md-3">
                    <input type="text" id="cornerRadius" />
                </div>
            </div>

            <div class="row">
                <div class="col-md-3 aligntop" style="margin-right: -10px;">
                    Bridging
                </div>
                <div class="col-md-3">
                    <input type="checkbox" id="bridge" />
                </div>
            </div>

            <div class="row">
                <div class="col-md-3 aligntop" style="margin-right: -10px;">
                    Bridge Direction
                </div>
                <div class="col-md-3">
                    <input type="text" id="direction" />
                    <div id="directionlistDiv">
                        <ul>
                            <li value="top">Top</li>
                            <li value="bottom">Bottom</li>
                            <li value="left">Left</li>
                            <li value="right">Right</li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3 aligntop">
                    <b>Drag</b>
                </div>
            </div>

            <div class="row">
                <div class="col-md-3 aligntop" style="margin-right: -10px;">
                    Connector
                </div>
                <div class="col-md-3">
                    <input type="checkbox" id="dragable" class="example" />
                </div>
            </div>

            <div class="row">
                <div class="col-md-3 aligntop" style="margin-right: -10px;">
                    Source
                </div>
                <div class="col-md-3">
                    <input type="checkbox" id="dragablesource" class="example" />
                </div>
            </div>

            <div class="row">
                <div class="col-md-3 aligntop" style="margin-right: -10px;">
                    Target
                </div>
                <div class="col-md-3">
                    <input type="checkbox" id="dragabletarget" class="example" />
                </div>
            </div>

            <div class="row">
                <div class="col-md-3 aligntop" style="margin-right: -10px;">
                    Segments
                </div>
                <div class="col-md-3">
                    <input type="checkbox" id="dragablesegment" class="example" />
                </div>
            </div>
        </div>
    </div>
}
@section ScriptSection{
    <script type="text/javascript">
        $("#sampleProperties").ejPropertiesPanel();
        //Check Box to enable/disable dragging
        $('#dragable').ejCheckBox({
            checked: true,
            change: function () {
                updateConnectors("dragable", ej.datavisualization.Diagram.ConnectorConstraints.Drag);
            }
        });

        //Check Box to enable/disable dragging source end
        $("#dragablesource").ejCheckBox({
            checked: true,
            change: function () {
                updateConnectors("dragablesource", ej.datavisualization.Diagram.ConnectorConstraints.DragSourceEnd);
            }
        });

        //Check Box to enable/disable dragging target end
        $("#dragabletarget").ejCheckBox({
            checked: true,
            change: function () {
                updateConnectors("dragabletarget", ej.datavisualization.Diagram.ConnectorConstraints.DragTargetEnd);
            }
        });

        //Check Box to enable/disable dragging segment thumbs
        $("#dragablesegment").ejCheckBox({
            checked: true,
            change: function () {
                updateConnectors("dragablesegment", ej.datavisualization.Diagram.ConnectorConstraints.DragSegmentThumb);
            }
        });

        //Check Box to enable/disable bridging
        $("#bridge").ejCheckBox({
            checked: true,
            change: function () {
                updateConnectors("bridge", ej.datavisualization.Diagram.ConnectorConstraints.Bridging);
            }
        });

        //Drop down to change the bridge direction
        $("#direction").ejDropDownList({
            targetID: "directionlistDiv",
            text: "Top",
            value: "value",
            change: function changedirection(args) {
                $("#diagram").ejDiagram({ bridgeDirection: args.value });
            },
            width: "120px"
        });

        //Dropdown to change the segments
        $("#segment").ejDropDownList({
            targetID: "segmentlistDiv",
            text: "Orthogonal",
            value: "value",
            change: "changeSegment",
            width: "120px"
        });

        //Numeric text box to change the corner radius
        $("#cornerRadius").ejNumericTextbox({
            value: 10,
            minValue: 0,
            maxValue: 10,
            change: "changeCornerRadius",
            width: "120px"
        });





        //end region

        //region helper methods

        //Enable/Disable a particular behavior of connector
        function updateConnectors(id, constraints) {
            var diagram = $("#diagram").ejDiagram("instance");
            var checkbox = $("#" + id).ejCheckBox("instance");
            var selectedConnectors = getSelectedConnectors(diagram.model.selectedItems.children);
            var connectors = selectedConnectors.length ? selectedConnectors : diagram.model.connectors;
            for (var i = 0; i < connectors.length; i++) {
                var connector = connectors[i];
                if (diagram.getObjectType(connector) == "connector") {
                    diagram.updateConnector(connector.name, {
                        constraints: checkbox.isChecked() ?
                           connector.constraints | constraints : connector.constraints & ~constraints
                    });
                }
            }
        }

        //Modify the segment type
        function changeSegment(args) {
            var diagram = $("#diagram").ejDiagram("instance");
            var selectedConnectors = getSelectedConnectors(diagram.model.selectedItems.children);
            var connectors = selectedConnectors.length ? selectedConnectors : diagram.model.connectors;
            for (var i = 0; i < connectors.length; i++) {
                var connector = connectors[i];
                if (args.value == "orthogonal") {
                    if (connector.addInfo.segments) {
                        diagram.updateConnector(connector.name, { segments: connector.addInfo.segments });
                    }
                    else {
                        diagram.updateConnector(connector.name, { segments: [{ type: args.value }] });
                    }
                }
                else
                    diagram.updateConnector(connector.name, { segments: [{ type: args.value }] });
            }
        }

        //Update the corner radius
        function changeCornerRadius(args) {
            var diagram = $("#diagram").ejDiagram("instance");
            var selectedConnectors = getSelectedConnectors(diagram.model.selectedItems.children);
            var connectors = selectedConnectors.length ? selectedConnectors : diagram.model.connectors;
            for (var i = 0; i < connectors.length; i++) {
                var connector = connectors[i];
                diagram.updateConnector(connector.name, { cornerRadius: args.value });
            }
        }

        //Selection change event handler
        function selectionChanged(args) {
            var diagram = $("#diagram").ejDiagram("instance");
            var ConnectorConstraints = ej.datavisualization.Diagram.ConnectorConstraints;
            var selectedConnectors = getSelectedConnectors(args.selectedItems);
            var connectors = selectedConnectors.length ? selectedConnectors : diagram.model.connectors;
            updateCheckBox("dragable", connectors, ConnectorConstraints.Drag);
            updateCheckBox("dragablesource", connectors, ConnectorConstraints.DragSourceEnd);
            updateCheckBox("dragabletarget", connectors, ConnectorConstraints.DragTargetEnd);
            updateCheckBox("dragablesegment", connectors, ConnectorConstraints.DragSegmentThumb);
            updateCheckBox("bridge", connectors, ConnectorConstraints.Bridging);

            var checked;
            var radius = connectors[0].cornerRadius;
            for (i = 1; i < connectors.length; i++) {
                if (radius != connectors[i].cornerRadius) {
                    $("#cornerRadius").ejNumericTextbox({ enabled: false });
                    checked = true;
                    break;
                }
            }
            if (!checked) {
                $("#cornerRadius").ejNumericTextbox({ enabled: true });
                $("#cornerRadius").ejNumericTextbox({ value: radius });
            }
        }

        //Get the selected connectors
        function getSelectedConnectors(selectedItems) {
            var diagram = $("#diagram").ejDiagram("instance");
            var connectors = [];
            for (var i = 0; i < selectedItems.length; i++) {
                if (diagram.getObjectType(selectedItems[i]) == "connector")
                    connectors.push(selectedItems[i]);
            }
            return connectors;
        }

        //Update the check boxes based on the selected connectors
        function updateCheckBox(id, connectors, constraints) {
            var enabled, connector, checked;
            var diagram = $("#diagram").ejDiagram("instance");
            enabled = connectors[0].constraints & constraints ? true : false;
            if (connectors.length == 1) $("#" + id).ejCheckBox({ enabled: enabled });
            else {
                for (var i = 1; i < connectors.length; i++) {
                    connector = connectors[i];
                    if (diagram.getObjectType(connector) == "connector") {
                        if ((connector.constraints & constraints ? true : false) != enabled) {
                            $("#" + id).ejCheckBox({ enabled: false });
                            checked = true;
                            break;
                        }
                    }
                }
            }
            if (!checked) {
                $("#" + id).ejCheckBox({ enabled: true });
                $("#" + id).ejCheckBox({ checked: enabled });
            }
        }
    </script>
}
<style>
    .svg-rotate-ie:hover {
        cursor: url("~/wwwroot/css/content/ej/common-images/rotate.cur"),default;
    }

    .svg-rotate {
        cursor: url("~/wwwroot/css/content/ej/common-images/rotate.cur"),default;
    }
</style>
