@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/cultures/ej.culture.en-US.min.js")"></script>
}
@section SampleHeading{
    <span class="sampleName">RTE / Events</span>}
@section ControlsSection{ 
    <ej-rte id="rteSample" width="100%" is-responsive="true" min-width="120px" create="onCreate" pre-render="onPreRender" change="onChange" keydown="onKeydown" keyup="onKeyup" execute="onExecute" >
        <e-content-template>
            <div>
                &lt;p&gt;&lt;b&gt;Description:&lt;/b&gt;&lt;/p&gt;
                &lt;p&gt;The Rich Text Editor (RTE) control is an easy to render in
                client side. Customer easy to edit the contents and get the HTML content for
                the displayed content. A rich text editor control provides users with a toolbar
                that helps them to apply rich text formats to the text entered in the text
                area. &lt;/p&gt;
                &lt;p&gt;&lt;b&gt;Functional
                Specifications/Requirements:&lt;/b&gt;&lt;/p&gt;
                &lt;ol&gt;&lt;li&gt;&lt;p&gt;Provide
                the tool bar support, it’s also customizable.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Options
                to get the HTML elements with styles.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Support
                to insert image from a defined path.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Footer
                elements and styles(tag / Element information , Action button (Upload, Cancel))&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Re-size
                the editor support. &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Provide
                efficient public methods and client side events.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Keyboard
                navigation support.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;
            </div>
        </e-content-template>
    </ej-rte>
    
}
<div id="rteTarget">
    <ul>
        <li>change</li>
        <li>keydown</li>
        <li>keyup</li>
        <li>execute</li>
    </ul>
</div>
@section EventsDropdown{
    <ej-drop-down-list id="selectControls_input" target-id="rteTarget" show-checkbox="true" check-all="true" change="evtpropscheckedevent"></ej-drop-down-list>
    }
@section ScriptSection{
    <script>
        var rteObj;
        function evtpropscheckedevent(args) {
            rteObj = $("#rteSample").data("ejRTE");
            if (args.isChecked) {
                switch (args.selectedText) {
                    case "create": rteObj.option(args.selectedText, "onCreate"); break;
                    case "prerender": rteObj.option(args.selectedText, "onPreRender"); break;
                    case "keydown": rteObj.option(args.selectedText, "onKeydown"); break;
                    case "execute": rteObj.option(args.selectedText, "onExecute"); break;
                    case "keyup": rteObj.option(args.selectedText, "onKeyup"); break;
                    case "change": rteObj.option(args.selectedText, "onChange"); break;
                }
            }
            else rteObj.option(args.selectedText, null);
        }

        function onCreate(args) {
            jQuery.addEventLog("RTE has been <span class='eventTitle'>created</span>.");
        }
        function onPreRender(args) {
            jQuery.addEventLog("RTE <span class='eventTitle'>onPreRender</span> has been triggered.");
        }
        function onChange(args) {
            jQuery.addEventLog("RTE value has been <span class='eventTitle'>changed</span>.");
        }

        function onKeydown(args) {
            jQuery.addEventLog("<span class='eventTitle'>Keydown</span> event is fired.");
        }

        function onKeyup(args) {
            jQuery.addEventLog("<span class='eventTitle'>Keyup</span> event is fired.");
        }

        function onExecute(args) {
            jQuery.addEventLog(args.commandName + " command has been <span class='eventTitle'>Executed</span>");
        }

        function onClear() {
            jQuery.clearEventLog();
        }
    </script>
}
@section StyleSection{
    <style>
        .cols-sample-area, .cols-prop-area.event-tracer {
            height: 422px;
        }
    </style>
}
